library(manipulate)
library(ggplot2)
library(UsingR); data(galton);
library(reshape2)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
ggplot(data.frame(x = factor(0 : 1), y = c(.5, .5)), aes(x = x, y = y)) + geom_bar(stat = "identity", colour = 'black', fill = "lightblue")
ggplot(data.frame(x = factor(1 : 6), y = rep(1/6, 6)), aes(x = x, y = y)) + geom_bar(stat = "identity", colour = 'black', fill = "lightblue")
g <- ggplot(data.frame(x = c(-0.25, 0, 0, 1, 1, 1.25),
y = c(0, 0, 1, 1, 0, 0)),
aes(x = x, y = y))
g <- g + geom_line(size = 2, colour = "black")
g <- g + labs(title = "Uniform density")
g
nosim <- 10000; n <- 10
dat <- data.frame(
x = c(rnorm(nosim), apply(matrix(rnorm(nosim * n), nosim), 1, mean)),
what = factor(rep(c("Obs", "Mean"), c(nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = what)) + geom_density(size = 2, alpha = .2)
dat <- data.frame(
x = c(sample(1 : 6, nosim, replace = TRUE),
apply(matrix(sample(1 : 6, nosim * 2, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 3, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(1 : 6, nosim * 4, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(1 : 4, rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.25, colour = "black")
g + facet_grid(. ~ size)
dat <- data.frame(
x = c(sample(0 : 1, nosim, replace = TRUE),
apply(matrix(sample(0 : 1, nosim * 10, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 20, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 30, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(c(1, 10, 20, 30), rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth = 1 / 12, colour = "black");
g + facet_grid(. ~ size)
pois(3, lambda = 2.5 * 4)
ppois(3, lambda = 2.5 * 4)
pbinom(2, size = 500, prob = .01)
pbinom(2, size = 500, prob = .01)
ppois(2, lambda=500 * .01)
n <- 10000; means <- cumsum(rnorm(n)) / (1  : n); library(ggplot2)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(sample(0 : 1, n , replace = TRUE)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 0.9) / sqrt(.1 * .9)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, prob = c(.1,.9), nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, prob = c(.1,.9), nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, prob = c(.1,.9), nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(UsingR);data(father.son); x <- father.son$sheight
(mean(x) + c(-1, 1) * qnorm(.975) * sd(x) / sqrt(length(x))) / 12
round(1 / sqrt(10 ^ (1 : 6)), 3)
.56 + c(-1, 1) * qnorm(.975) * sqrt(.56 * .44 / 100)
n <- 20; pvals <- seq(.1, .9, by = .05); nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- rbinom(nosim, prob = p, size = n) / n
ll <- phats - qnorm(.975) * sqrt(phats * (1 - phats) / n)
ul <- phats + qnorm(.975) * sqrt(phats * (1 - phats) / n)
mean(ll < p & ul > p)
})
ggplot(data.frame(pvals, coverage), aes(x = pvals, y = coverage)) + geom_line(size = 2) + geom_hline(yintercept = 0.95) + ylim(.75, 1.0)
n <- 100; pvals <- seq(.1, .9, by = .05); nosim <- 1000
coverage2 <- sapply(pvals, function(p){
phats <- rbinom(nosim, prob = p, size = n) / n
ll <- phats - qnorm(.975) * sqrt(phats * (1 - phats) / n)
ul <- phats + qnorm(.975) * sqrt(phats * (1 - phats) / n)
mean(ll < p & ul > p)
})
ggplot(data.frame(pvals, coverage), aes(x = pvals, y = coverage2)) + geom_line(size = 2) + geom_hline(yintercept = 0.95)+ ylim(.75, 1.0)
n <- 20; pvals <- seq(.1, .9, by = .05); nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- (rbinom(nosim, prob = p, size = n) + 2) / (n + 4)
ll <- phats - qnorm(.975) * sqrt(phats * (1 - phats) / n)
ul <- phats + qnorm(.975) * sqrt(phats * (1 - phats) / n)
mean(ll < p & ul > p)
})
ggplot(data.frame(pvals, coverage), aes(x = pvals, y = coverage)) + geom_line(size = 2) + geom_hline(yintercept = 0.95)+ ylim(.75, 1.0)
x <- 5; t <- 94.32; lambda <- x / t
round(lambda + c(-1, 1) * qnorm(.975) * sqrt(lambda / t), 3)
poisson.test(x, T = 94.32)$conf
lambdavals <- seq(0.005, 0.10, by = .01); nosim <- 1000
t <- 100
coverage <- sapply(lambdavals, function(lambda){
lhats <- rpois(nosim, lambda = lambda * t) / t
ll <- lhats - qnorm(.975) * sqrt(lhats / t)
ul <- lhats + qnorm(.975) * sqrt(lhats / t)
mean(ll < lambda & ul > lambda)
})
ggplot(data.frame(lambdavals, coverage), aes(x = lambdavals, y = coverage)) + geom_line(size = 2) + geom_hline(yintercept = 0.95)+ylim(0, 1.0)
?pnorm
pnorm(70, mean = 80, sd = 10)
pnorm(95, mean = 1100, sd = 755555)
pnorm(95, mean = 1100, sd = 75, lower.tail = F )
qnorm(95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
choose(5,4) * 0.5 * 5 + choose(5,5)*0.5*5
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
choose(5,3) * 0.5 * 3
choose(5,3) * 0.5 * 3 + choose(5,3)*0.5*5
err <- 10/sqrt(100)
err
probs <- (pnorm(14, mean = mu, sd = s)-pnorm(16, mean = mu, sd = s))
mu <- 15
s <- 10
si <- 10
n <- 100
s <- si/sqrt(n)
probs <- (pnorm(14, mean = mu, sd = s)-pnorm(16, mean = mu, sd = s))
probs
probs <- (pnorm(16, mean = mu, sd = s)-pnorm(14, mean = mu, sd = s))
probs
?qnorm
qnorm(0.5, mean = mu, sd = s)
mu <- 0.5
si <- 1/12
n <- 1000
s <- si/sqrt(n)
qnorm(0.5, mean = mu, sd = s)
ppois(10, lambda = 5*3)
