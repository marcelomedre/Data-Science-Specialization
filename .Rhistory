sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]) / 10
With 95% confidence, we estimate that a 0.1 carat increase in diamond size results in a r round((sumCoef[2,1] - qt(.975, df = fit$df) * sumCoef[2, 2]) / 10, 1) to r round((sumCoef[2,1] + qt(.975, df = fit$df) * sumCoef[2, 2]) / 10, 1) increase in price in (Singapore) dollars
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]) / 10
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]) / 10
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]) / 10
library(ggplot2)
newx = data.frame(x = seq(min(x), max(x), length = 100))
p1 = data.frame(predict(fit, newdata= newx,interval = ("confidence")))
p2 = data.frame(predict(fit, newdata = newx,interval = ("prediction")))
p1$interval = "confidence"
p2$interval = "prediction"
p1$x = newx$x
p2$x = newx$x
dat = rbind(p1, p2)
names(dat)[1] = "y"
g = ggplot(dat, aes(x = x, y = y))
g = g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g = g + geom_line()
g = g + geom_point(data = data.frame(x = x, y=y), aes(x = x, y = y), size = 4)
g
newdata <- data.frame(x = xVals)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
est <- predict(fit)
summary(fit)
summary(fit)
fit$residuals
data(mtcars)
summary(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
predict(fit, data.frame(x = mean(x)), interval = "confidence" )
data(mtcars)
summary(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
predict(fit, data.frame(x = mean(x)), interval = "confidence" )
View(mtcars)
fit <- lm(mpg ~ mtcars$wt, data = mtcars)
data(mtcars)
summary(mtcars)
fit <- lm(mpg ~ mtcars$wt, data = mtcars)
predict(fit, data.frame(x = mean(x)), interval = "confidence" )
y <- mtcars$mpg
y <- mtcars$mpg
x <- mtcars$wt
fit <- lm(y ~ x)
predict(fit, data.frame(x = mean(x)), interval = "confidence" )
?mtcars
predict(fit, newdata = 3, interval = "prediction")
predict(fit, x = 3, interval = "prediction")
predict(fit, data.frame(x = 3), interval = "prediction")
# from model above
predict(fit, data.frame(x = 2), interval = "confidence")
summary(fit)
fit2 <- lm(y ~ I(x/2))
summary(fit2)
summary(fit2)$coeffiecients
fit2$coefficients
sumCoef <- summary(fit2)$coefficients
sumCoef
sumCoef[2,1]+c(-1,1)*qt(.975, df = fit2$df)*sumCoef[2,2]
fit3<-lm(y ~ 1)
fit4<-lm(y ~ x - 1)
plot(x,y)
abline(fit,col="red")
abline(fit3,col="blue")
abline(fit4,col="green")
fit3<-lm(y ~ 1)
fit4<-lm(y ~ x - 1)
plot(x,y)
abline(fit,col="red")
abline(fit3,col="blue")
abline(fit4,col="green")
anova(fit)
sum(resid(fit3)^2)/sum(resid(fit)^2)
anova(fit)
anova(fit3)
sum(resid(fit)^2)/sum(resid(fit3)^2)
rm(list = ls())
n = 100; x = rnorm(n); x2 = rnorm(n); x3 = rnorm(n)
y = 1 + x + x2 + x3 + rnorm(n, sd = .1)
ey = resid(lm(y ~ x2 + x3))
ex = resid(lm(x ~ x2 + x3))
sum(ey * ex) / sum(ex ^ 2)
coef(lm(ey ~ ex - 1))
coef(lm(y ~ x + x2 + x3))
require(datasets)
data(swiss)
?swiss
require(GGally); require(ggplot2)
require(GGally); require(ggplot2)
g = ggpairs(swiss, lower = list(continuous = "smooth"), params = c(method = "loess"))
require(GGally); require(ggplot2)
g = ggpairs(swiss, lower = list(continuous = "smooth"),params = c(method = "loess"))
g = ggpairs(swiss, lower = list(continuous = wrap("smooth", method = "lm")))
g
summary(lm(Fertility ~ . , data = swiss))
summary(lm(Fertility ~ . , data = swiss))$coefficients
summary(lm(Fertility ~ . , data = swiss))
summary(lm(Fertility ~ . , data = swiss))$coefficients
summary(lm(Fertility ~ Agriculture, data = swiss))$coefficients
n <- 100; x2 <- 1 : n; x1 <- .01 * x2 + runif(n, -.1, .1); y = -x1 + x2 + rnorm(n, sd = .01)
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1 + x2))$coef
dat = data.frame(y = y, x1 = x1, x2 = x2, ey = resid(lm(y ~ x2)), ex1 = resid(lm(x1 ~ x2)))
n <- 100; x2 <- 1 : n; x1 <- .01 * x2 + runif(n, -.1, .1); y = -x1 + x2 + rnorm(n, sd = .01)
summary(lm(y ~ x1))$coef
summary(lm(y ~ x1 + x2))$coef
dat = data.frame(y = y, x1 = x1, x2 = x2, ey = resid(lm(y ~ x2)), ex1 = resid(lm(x1 ~ x2)))
library(ggplot2)
g = ggplot(dat, aes(y = y, x = x1, colour = x2))
g = g + geom_point(colour="grey50", size = 5) + geom_smooth(method = lm, se = FALSE, colour = "black")
g = g + geom_point(size = 4)
g
g2 = ggplot(dat, aes(y = ey, x = ex1, colour = x2))
g2 = g2 + geom_point(colour="grey50", size = 5) + geom_smooth(method = lm, se = FALSE, colour = "black") + geom_point(size = 4)
g2
z <- swiss$Agriculture + swiss$Education
lm(Fertility ~ . + z, data = swiss)
require(datasets);data(InsectSprays); require(stats); require(ggplot2)
g = ggplot(data = InsectSprays, aes(y = count, x = spray, fill  = spray))
g = g + geom_violin(colour = "black", size = 2)
g = g + xlab("Type of spray") + ylab("Insect count")
g
summary(lm(count ~ spray, data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
, data = InsectSprays))$coef
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays))$coef
summary(lm(count ~ spray - 1, data = InsectSprays))$coef
library(dplyr)
summarise(group_by(InsectSprays, spray), mn = mean(count))
spray2 <- relevel(InsectSprays$spray, "C")
summary(lm(count ~ spray2, data = InsectSprays))$coef
library(datasets); data(swiss)
head(swiss)
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
hist(swiss$Catholic)
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
summary(lm(Fertility ~ Agriculture, data = swiss))$coef
fit = lm(Fertility ~ Agriculture, data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
summary(lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss))$coef
fit = lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3], slope = coef(fit)[2], size = 2)
g1
summary(lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss))$coef
fit = lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3],
slope = coef(fit)[2] + coef(fit)[4], size = 2)
g1
summary(lm(Fertility ~ Agriculture + Agriculture : factor(CatholicBin), data = swiss))$coef
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), 1.5 + runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 0; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), .9 + runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- -1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(.5 + runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
plot(x1, y, type = "n", frame = FALSE)
abline(lm(y ~ x1), lwd = 2)
co.pal <- heat.colors(n)
points(x1, y, pch = 21, col = "black", bg = co.pal[round((n - 1) * x2 + 1)], cex = 2)
library(rgl)
plot3d(x1, x2, y)
plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), frame = FALSE, col = "black", bg = "lightblue", pch = 21, cex = 2)
abline(lm(I(resid(lm(x1 ~ x2))) ~ I(resid(lm(y ~ x2)))), lwd = 2)
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- x1/sqrt(2) + rnorm(n) /sqrt(2)
x3 <- x1 * 0.95 + rnorm(n) * sqrt(1 - 0.95^2);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
##doesn't depend on which y you use,
y <- x1 + rnorm(n, sd = .3)
a <- summary(lm(y ~ x1))$cov.unscaled[2,2]
c(summary(lm(y ~ x1 + x2))$cov.unscaled[2,2],
summary(lm(y~ x1 + x2 + x3))$cov.unscaled[2,2]) / a
temp <- apply(betas, 1, var); temp[2 : 3] / temp[1]
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit1, Fertility ~ Agriculture + Examination)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit1, Fertility ~ Agriculture + Examination)
fit3 <- update(fit1, Fertility ~ Agriculture + Examination + Education)
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2]) / a
library(car)
fit <- lm(Fertility ~ . , data = swiss)
vif(fit)
sqrt(vif(fit)) #I prefer sd
data("mtcars")
?mtcars
model <- lm(mpg ~ factor(cyl)  + wt, data = mtcars)
summary(model)$coefficients
summary(model)$coef
model1 <- lm(mpg ~ factor(cyl), data = mtcars)
model2 <- lm(mpg ~ factor(cyl)  + wt, data = mtcars)
summary(model1)$coef
summary(model2)$coef
modelun <- lm(mpg ~ factor(cyl), data = mtcars)
modeladj <- lm(mpg ~ factor(cyl)  + wt, data = mtcars)
summary(modelun)$coef
summary(modeladj)$coef
model1 <- lm(mpg ~ factor(cyl)  + wt, data = mtcars)
summary(model1)$coef
model <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
summary(model2)$coef
model1 <- lm(mpg ~ factor(cyl)  + wt, data = mtcars)
model1$coef
model <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
model2$coef
model <- lm(mpg ~ I(factor(cyl) * wt), data = mtcars)
model2 <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
model2$coef
anova(model1, model2)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
max(hatvalues(fit))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
influence.measures(fit)$infmat[5, dfb.x]
influence.measures(fit)$infmat[5, "dfb.x""]
influence.measures(fit)$infmat[5, "dfb.x"]
influence.measures(fit)$infmat[5, 'dfb.x']
library(MASS)
?shuttle
head(shuttle)
rm(list = ls())
library(MASS)
head(shuttle)
data("shuttle")
head(shuttle)
data("shuttle")
head(shuttle)
View(shuttle)
shuttle$use2 <- as.numeric(shuttle$use == "auto")
shuttle$wind2 <- as.numeric(shuttle$wind == "head")
logreg <- glm(use2 ~ wind2, family = "binomial", data = shuttle)
summary(logreg)$coef
summary(logreg)$coef
exp(coef(logreg))
logreg <- glm(use2 ~ wind2 -1 , family = "binomial", data = shuttle)
summary(logreg)$coef
exp(coef(logreg))
logreg <- glm(use2 ~ wind -1 , family = "binomial", data = shuttle)
summary(logreg)$coef
exp(coef(logreg))
exp(coef(logreg))[1]
Oddsratio <- exp(coef(logreg))[1]/exp(coef(logreg))[2]
Oddsratio
rm(list = ls())
library(MASS)
data("shuttle")
head(shuttle)
shuttle$use2 <- as.numeric(shuttle$use == "auto")
logreg <- glm(use2 ~ wind -1 , family = "binomial", data = shuttle)
summary(logreg)$coef
exp(coef(logreg))
Oddsratio <- exp(coef(logreg))[1]/exp(coef(logreg))[2]
Oddsratio
logreg2 <- glm(use2 ~ wind + magn - 1 , family = "binomial", data = shuttle)
summary(logreg2)$coef
exp(coef(logreg2))
Oddsratio <- exp(coef(logreg))[1]/exp(coef(logreg))[2]
Oddsratio
logreg3 <- glm(use2 ~ factor(wind), family = "binomial", data = shuttle)
summary(logreg3)$coef
logreg4 <- glm(1 - use2 ~ factor(wind), family = "binomial", data = shuttle)
summary(logreg4)$coef
summary(logreg4)$coef - summary(logreg3)$coef
summary(logreg4)$coef / summary(logreg3)$coef
data("InsectSprays")
head(InsectSprays)
View(InsectSprays)
spray2 <- as.factor(InsectSprays$spray)
InsectSprays$spray2 <- as.factor(InsectSprays$spray)
PoiFit <- glm(count ~ factor(spray) - 1, data = InsectSprays, family = "poisson")
summary(PoiFit)$coef
PoiFit <- glm(count ~ factor(spray), data = InsectSprays, family = "poisson")
summary(PoiFit)$coef
PoiFit <- glm(count ~ factor(spray) - 1, data = InsectSprays, family = "poisson")
summary(PoiFit)$coef
exp(coef(PoiFit))[1]
exp(coef(PoiFit))[1]/exp(coef(PoiFit))[2]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y, frame = FALSE, pch = 24, bg = "salmon", cex = 2)
linreg1 <- lm(y[1:6] ~ x[1:6])$coef
linreg2 <- lm(y[6:11] ~ x[6:11])$coef
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y, frame = FALSE, pch = 24, bg = "salmon", cex = 2)
linreg1 <- lm(y[1:6] ~ x[1:6])$coef
linreg2 <- lm(y[6:11] ~ x[6:11])$coef
abline(lingre1, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y, frame = FALSE, pch = 24, bg = "salmon", cex = 2)
linreg1 <- lm(y[1:6] ~ x[1:6])$coef
linreg2 <- lm(y[6:11] ~ x[6:11])$coef
abline(lingreg1, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y, frame = FALSE, pch = 24, bg = "salmon", cex = 2)
linreg1 <- lm(y[1:6] ~ x[1:6])$coef
linreg2 <- lm(y[6:11] ~ x[6:11])$coef
abline(linreg1, col = "red", lwd = 2)
abline(linreg2, col = "red", lwd = 2)
knots <- c(0)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y, frame = FALSE, pch = 24, bg = "salmon", cex = 2)
linreg1 <- lm(y[1:6] ~ x[1:6])$coef
linreg2 <- lm(y[6:11] ~ x[6:11])$coef
abline(linreg1, col = "red", lwd = 2)
abline(linreg2, col = "red", lwd = 2)
knots <- c(0)
spline <- sapply(knots, function(knot)(x > knot)* (x-knot))
xmat <- cbind(1, x, spline)
fit <- lm(y ~ xmat - 1)
yhat <- predict(fit)
summary(fit)$coef
(yhat[10]-yhat[6])/4
plot(x,y)
lines(x, yhat, col = "blue")
rm(list = ls())
cardata <- data("mtcars")
cardata <- mtcars
View(cardata)
head(cardata)
tail(cardata)
summary(cardata)
?mtcars
library(ggplot)
library(ggplot2)
ggplot(data = cardata, aes(y = mpg, x = factor(am)))+
geom_boxplot()
ggplot(data = cardata, aes(y = mpg, x = factor(am)))+
geom_boxplot(stat = "boxplot")
ggplot(data = cardata, aes(y = mpg, x = factor(am)))+
geom_boxplot(stat = "boxplot")+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), colour = am))+
geom_boxplot(stat = "boxplot")+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), colour = factor(am)))+
geom_boxplot(stat = "boxplot")+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), fill = am))+
geom_boxplot(stat = "boxplot")+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), fill = factor(am)))+
geom_boxplot()+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), fill = factor(am)))+
geom_boxplot()+
guides(fill=guide_legend(title=NULL))+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
ggplot(data = cardata, aes(y = mpg, x = factor(am), fill = factor(am)))+
geom_boxplot()+
scale_fill_discrete(name="Tranmission\nType")+
xlab("Transmission type 0 = auto and 1 = manual")+
ylab("Miles / Gallon")
t.res <- t.test(mpg ~ factor(am), data = cardata)
t.res
linReg <- lm(mpg ~ factor(am), data = cardata)
linReg
summary(linReg)
linReg <- lm(mpg ~ factor(am) - 1, data = cardata)
summary(linReg)
linReg <- lm(mpg ~ factor(am), data = cardata)
summary(linReg)
fullLinReg <- lm(mpg ~. , data = cardata)
summary(fullLinReg)
stepmodel <- step(lm(mpg ~. , data = cardata), trace = 0, steps = 1000)
summary(stepmodel)
fullLinReg <- lm(mpg ~. , data = cardata)
summary(fullLinReg)
plot(res(fullLinReg))
plot(residuals(fullLinReg))
stepmodel <- step(lm(mpg ~. , data = cardata), trace = 0, steps = 1000)
summary(stepmodel)
plot(residuals(stepmodel))
summary(stepmodel)
confint(stepmodel)
confint(stepmodel)
# Residual plot
par(mfrow = c(2,2))
plot(stepmodel)
library(rmarkdown)
getwd()
setwd("C:/Users/Marcelo/Desktop/Data Science/Data-Science-Specialization/")
